const g=async(o,a,n,i="single")=>{try{console.log("üå§Ô∏è === CLOUDINARY UPLOAD START ==="),console.log("üìÅ File details:",{name:o.name,size:o.size,type:o.type});const s="dzd3kxrmg",p="akne_photos",t=new FormData;t.append("file",o),t.append("upload_preset",p),t.append("folder",`user_photos/${a}`);const d=Date.now(),l=`day-${n}-${i}-${d}`;t.append("public_id",l);const c=`https://api.cloudinary.com/v1_1/${s}/image/upload`;console.log("üì§ Upload URL:",c),console.log("üìÇ Folder:",`user_photos/${a}`),console.log("üìã Public ID:",l),console.log("üöÄ Starting upload...");const r=await fetch(c,{method:"POST",body:t});if(console.log("üìä Response status:",r.status),console.log("üìä Response ok:",r.ok),!r.ok){const u=await r.text();throw console.error("‚ùå Cloudinary error response:",u),new Error(`Cloudinary upload failed: ${r.status}`)}const e=await r.json();return console.log("üéâ Upload successful!"),console.log("üîó Image URL:",e.secure_url),console.log("üìä Image info:",{public_id:e.public_id,format:e.format,width:e.width,height:e.height,bytes:e.bytes}),e.secure_url}catch(s){throw console.error("üí• === CLOUDINARY UPLOAD ERROR ==="),console.error("‚ùå Error message:",s.message),console.error("‚ùå Error stack:",s.stack),s}},m=o=>{if(!o)throw new Error("≈Ω√°dn√Ω soubor nebyl vybr√°n");if(!["image/jpeg","image/jpg","image/png","image/webp"].includes(o.type))throw new Error("Neplatn√Ω form√°t souboru. Pou≈æijte JPG, PNG nebo WebP.");const n=10*1024*1024;if(o.size>n)throw new Error("Soubor je p≈ô√≠li≈° velk√Ω. Maxim√°ln√≠ velikost je 10MB.");return!0};export{g as u,m as v};
