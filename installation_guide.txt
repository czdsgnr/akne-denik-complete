# 🚀 Instalace a spuštění optimalizované aplikace

## 📋 Kontrolní seznam před instalací

### ✅ Co máte připraveno:
- [ ] Node.js 18+ nebo 20+
- [ ] pnpm nebo npm
- [ ] Firebase projekt s Firestore
- [ ] Shadcn/UI komponenty

## 📂 1. Reorganizace souborů

### Vytvořte novou strukturu složek:

```bash
mkdir -p src/components/user
mkdir -p src/components/admin  
mkdir -p src/pages
mkdir -p src/hooks
```

### Přesuňte existující soubory:

```bash
# Existující komponenty zůstávají
src/components/DailyLogForm.jsx ✅ (zůstává)
src/components/DailyContentEditor.jsx ✅ (zůstává)
src/components/UserManagement.jsx ✅ (zůstává)

# UI komponenty už máte
src/components/ui/ ✅ (zůstává)
```

## 📝 2. Vytvoření nových souborů

### Nahraďte App.jsx:
Zkopírujte obsah z artefaktu "App.jsx - Optimalizovaný hlavní soubor"

### Vytvořte hooks/useAuth.js:
Zkopírujte obsah z artefaktu "hooks/useAuth.js"

### Vytvořte pages/:
1. **pages/LandingPage.jsx** - Landing page
2. **pages/LoginPage.jsx** - Přihlášení
3. **pages/RegisterPage.jsx** - Registrace  
4. **pages/UserApp.jsx** - Hlavní uživatelská app

### Vytvořte components/ui/BottomNavigation.jsx:
Zkopírujte obsah z artefaktu "BottomNavigation.jsx"

### Vytvořte components/user/:
1. **MyDayPage.jsx** - Můj den
2. **OverviewPage.jsx** - Přehled pokroku
3. **ChatPage.jsx** - Chat s adminem
4. **ProfilePage.jsx** - Profil a nastavení
5. **DailyTaskPage.jsx** - Detail denního úkolu

### Vytvořte components/admin/:
1. **AdminLayout.jsx** - Admin layout
2. **AdminRoutes.jsx** - Admin routing
3. **DashboardPage.jsx** - Admin dashboard
4. **ContentPage.jsx** - Editor obsahu (používá existující DailyContentEditor)

## ⚙️ 3. Aktualizace dependencies

### Zkontrolujte package.json:
```json
{
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.8.0",
    "firebase": "^10.7.0",
    "framer-motion": "^10.16.0",
    "lucide-react": "^0.263.1",
    "recharts": "^2.8.0",
    "@radix-ui/react-slot": "^1.0.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "tailwind-merge": "^2.0.0"
  }
}
```

### Nainstalujte závislosti:
```bash
pnpm install
# nebo
npm install
```

## 🔥 4. Firebase konfigurace

### Zkontrolujte src/lib/firebase.js:
```javascript
import { initializeApp } from 'firebase/app'
import { getAuth } from 'firebase/auth'
import { getFirestore } from 'firebase/firestore'
import { getStorage } from 'firebase/storage'

const firebaseConfig = {
  // Vaše Firebase konfigurace
}

const app = initializeApp(firebaseConfig)
export const auth = getAuth(app)
export const db = getFirestore(app)
export const storage = getStorage(app)
```

### Nastavte Firestore pravidla:
```javascript
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin přístup pro @aknedenik.cz
    match /{document=**} {
      allow read, write: if request.auth != null && 
        request.auth.token.email.matches('.*@aknedenik\\.cz$');
    }
    
    // Uživatelský přístup
    match /users/{userId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    match /userLogs/{logId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    match /dailyContent/{dayId} {
      allow read: if request.auth != null;
    }
  }
}
```

## 🎨 5. Kontrola Tailwind CSS

### Zkontrolujte tailwind.config.js:
```javascript
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        // ... další shadcn/ui barvy
      },
    },
  },
  plugins: [],
}
```

## 🚀 6. Spuštění

### Development server:
```bash
pnpm run dev
# nebo
npm run dev
```

### Build pro produkci:
```bash
pnpm run build
# nebo 
npm run build
```

## ✅ 7. Testování funkcionalit

### 1. Landing Page (/)
- [ ] Moderní design s animacemi
- [ ] CTA tlačítka fungují
- [ ] Přechod na registraci/přihlášení

### 2. Registrace (/register)
- [ ] 2-krokový formulář
- [ ] Validace dat
- [ ] Uložení do Firebase

### 3. Přihlášení (/login)
- [ ] Validace emailu/hesla
- [ ] Admin rozpoznání (@aknedenik.cz)
- [ ] Přesměrování podle role

### 4. Uživatelská aplikace
- [ ] Bottom navigation funguje
- [ ] Můj den - denní motivace + úkol
- [ ] Přehled - statistiky a grafy
- [ ] Chat - komunikace s adminem
- [ ] Profil - nastavení + odhlášení

### 5. Admin panel (/admin)
- [ ] Sidebar navigace
- [ ] Dashboard s reálnými daty
- [ ] Editor denního obsahu
- [ ] Správa uživatelů
- [ ] Zprávy od uživatelů

## 🔧 8. Řešení problémů

### Firebase připojení
```bash
# Zkontrolujte console prohlížeče
# Ověřte Firebase konfigurace
# Zkontrolujte Firestore rules
```

### Importy nefungují
```bash
# Zkontrolujte cesty k souborům
# Ověřte že všechny soubory existují
# Zkontrolujte case-sensitive názvy
```

### Shadcn/UI komponenty
```bash
# Přeinstalujte potřebné komponenty
npx shadcn-ui@latest add card button input textarea label
```

### Bottom Navigation
```bash
# Zkontrolujte že BottomNavigation.jsx existuje
# Ověřte importy v UserApp.jsx
# Zkontrolujte Tailwind CSS classes
```

## 📱 9. Mobile testování

### Responsive design
- [ ] Landing page na mobilu
- [ ] Registrace/přihlášení
- [ ] Bottom navigation na mobilu
- [ ] Admin sidebar na mobilu

### Performance
- [ ] Rychlé načítání
- [ ] Plynulé animace
- [ ] Bez memory leaks

## 🎯 10. Další kroky

### Prioritní funkce
1. **Push notifikace** - Připomenutí denních úkolů
2. **PWA** - Offline mode
3. **Export dat** - PDF reporty
4. **Image optimization** - WebP formát

### Performance optimalizace
1. **Lazy loading** - Načítání komponent na vyžádání
2. **Code splitting** - Rozdělení bundlu
3. **Caching** - Firebase cache optimalizace

### Analytics a monitoring
1. **Google Analytics** - User behavior tracking
2. **Error monitoring** - Sentry nebo podobné
3. **Performance monitoring** - Core Web Vitals

---

## 🎉 Úspěšné spuštění!

Po dokončení všech kroků budete mít:
- ✅ **Čistě organizovaný kód** rozdělený do logických celků
- ✅ **Moderní bottom bar navigaci** optimalizovanou pro mobil  
- ✅ **Kompletní uživatelské flow** od registrace po každodenní používání
- ✅ **Funkční admin panel** pro správu obsahu a uživatelů
- ✅ **Responzivní design** fungující na všech zařízeních

**Aplikace je připravena na produkční nasazení! 🚀**

---

## 📞 Podpora

Pokud narazíte na problémy:
1. Zkontrolujte console prohlížeče
2. Ověřte Firebase připojení
3. Porovnejte s artefakty v této konverzaci
4. Zkontrolujte že máte všechny soubory na správných místech